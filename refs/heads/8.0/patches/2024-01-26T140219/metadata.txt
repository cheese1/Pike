subject: Pike 8.0: Sync with 8.0.1890 (Roxen 7.2.313-r2)
from: abb3559fa2e9f7af4edf9e7ae841d1fed50fb06e
to: e33cae2fcebc90e05f2a379acff5a7a363e55792
originator: Henrik Grubbström (Grubba) <grubba@grubba.org>
depends: 2024-01-26T135032|pike/8.0.1876
restart: true

Multiple fixes:

• release number bumped to 8.0.1890 by export.pike

• Concurrent: Add serialize().

This function does the same as traverse(), but only has once active
call of the mapped function active at a time. This is useful when
the mapped function is resource heavy.

• Crypto.RSA: Do not allow NUL-prefixed cipher text.

Fixes #10139.

• Standards.ASN1.Types.Integer: Fix leading zero detection.

A leading zero (or 0xff) is allowed if it is necessary in
order to encode the sign bit.

Now also complains about leading 0xff (ie negative zero).

Fixes several testsuite errors.

• Standards.ASN1.Decode: Enforce canonical length encoding.

Do not allow longer length encoding than needed.

Do not allow longer tag encoding than needed.

Fixes #10134.

• Make ASN.1 secure_der_decode always catch decoding errors and return 0 instead. Make leading zero in integer encodings an error in secure mode.

• Use this instead of this_object().

• Crypto.Password: Stricter types.

• Crypto.Password: Validate password hashes generated with old crypt_hash().

• Crypto.Hash: Add crypt_hash_pike().

This function is compatible with the old implementation of crypt_hash().

It is intended to be used for validating passwords against
hashes generated by old versions of Pike.

Related to #10137.

• Crypto.Hash: Stricter type for crypt_hash().

• NTLM hash added

• Crypto.Hash: Fix bug in crypt_hash() for passwords of length power of 2.

Note that this only fixes the fallback implementations of crypt_hash(). The
C implementation (which is probably the one you use) still has the bug.

Fixes #10137.
